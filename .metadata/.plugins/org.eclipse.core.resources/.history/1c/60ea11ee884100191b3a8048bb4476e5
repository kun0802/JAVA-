package com.yychatclient.view;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

public class FriendList extends JFrame implements ActionListener,MouseListener{//顶层容器
	CardLayout cardLayout;//卡片布局
	//定义对象的引用变量
	JPanel myFriendPanel;
	JButton myFriendJButton;
	
	JScrollPane myFriendJScrollPane;//滚动条
	JPanel myFriendListJPanel;
	static final int FRIENDCOUNT=51;
	JLabel[] myFriendJLabel=new JLabel[FRIENDCOUNT];//对象数组
	//
	
	JPanel myStrangerBlackListJPanel;//
	JButton myStrangerJButton;
	JButton blackListJButton;
	
	JPanel myStrangerPanel;
	
	JPanel  myFriendStrangerPanel;
	JButton myFriendJButton1;
	JButton myStrangerJButton1;
	
	JButton blackListJButton1;
	
	public FriendList(){
		//第一张卡片，创建对象
		myFriendPanel=new JPanel(new BorderLayout());//边界布局
		//
		
		myFriendJButton=new JButton("我的好友");
		myFriendPanel.add(myFriendJButton,"North");
		
		//中部
		
		
		
		
		
		myFriendListJPanel=new JPanel(new GridLayout(FRIENDCOUNT-1,1));
		for(int i=1;i<FRIENDCOUNT;i++){
			myFriendJLabel[i]=new JLabel(i+"",new ImageIcon("images/YY1.gif"),JLabel.LEFT);
			myFriendJLabel[i].addMouseListener(this);
			myFriendListJPanel.add(myFriendJLabel[i]);
		}
		myFriendJScrollPane=new JScrollPane();
		myFriendPanel.add(myFriendJScrollPane);
		
		
		
		
		myStrangerBlackListJPanel=new JPanel(new GridLayout(2,1));
		myStrangerJButton=new JButton("陌生人");
		myStrangerJButton.addActionListener(this);
		blackListJButton=new JButton("黑名单");
	    myStrangerBlackListJPanel.add(myStrangerJButton);
	    myStrangerBlackListJPanel.add(blackListJButton);
	    myFriendPanel.add(myStrangerBlackListJPanel,"South");
	    myStrangerPanel = new JPanel(new BorderLayout());
	    
	    myFriendStrangerPanel=new JPanel(new GridLayout(2,1));
	    myFriendJButton1=new JButton("我的好友");
	    myFriendJButton1.addActionListener(this);
	    myStrangerJButton1=new JButton("陌生人");
	    myFriendStrangerPanel.add(myFriendJButton1);
	    myFriendStrangerPanel.add(myStrangerJButton1);
	    myStrangerPanel.add(myFriendStrangerPanel,"North");
	    
	    blackListJButton1=new JButton("黑名单");
	    myStrangerPanel.add(blackListJButton1,"South");
	    
	    //另外一张卡片
	    myStrangerPanel=new JPanel (new BorderLayout());
	    
	    myFriendStrangerPanel =new JPanel(new GridLayout(2,1));
	    myStrangerJButton1=new JButton("我的好友");
	    myStrangerJButton1=new JButton("陌生人");
	    myFriendStrangerPanel.add(myFriendJButton1);
	    myFriendStrangerPanel.add(myStrangerJButton1);
	    myStrangerPanel.add(myFriendStrangerPanel,"North");
	    
	    
	    cardLayout=new CardLayout();
	    this.setLayout(cardLayout);
	    this.add(myFriendPanel,"1");
	    this.add(myStrangerPanel, "2");
	    
	    this.setSize(150,500);
	    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    this.setVisible(true);
	}

	public static void main(String[] args) {
		FriendList friendList=new FriendList();
	}


     @Override
   public void actionPerformed(ActionEvent arg0){
    	 if(arg0.getSource()==myStrangerJButton){
    		 cardLayout.show(this.getContentPane(), "2");
    	 }
    	 if(arg0.getSource()==myFriendJButton1){
    		 cardLayout.show(this.getContentPane(), "1"); 
    	 }
     }

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		JLabel jLabel=(JLabel)e.getSource();
		jLabel.setForeground(Color.red);
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		JLabel jLabel=(JLabel)e.getSource();
		jLabel.setForeground(Color.black);
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
     
}
